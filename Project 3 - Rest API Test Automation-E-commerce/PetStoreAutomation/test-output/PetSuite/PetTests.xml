<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="LAPTOP-FQQEV6LJ" failures="0" tests="4" name="PetTests" time="1.618" errors="0" timestamp="2025-02-03T19:41:09 GMT">
  <testcase classname="api.test.UserTests" name="@BeforeClass testPostUser" time="1.211">
    <failure type="java.lang.IllegalArgumentException" message="object cannot be null">
      <![CDATA[java.lang.IllegalArgumentException: object cannot be null
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:58)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:54)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:217)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:240)
at io.restassured.internal.RequestSpecificationImpl.body(RequestSpecificationImpl.groovy:751)
at api.endpoints.UserEndPoints.createUser(UserEndPoints.java:20)
at api.test.UserTests.testPostUser(UserTests.java:33)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass testPostUser -->
  <testcase classname="api.test.UserTests" name="testPostUser" time="0.001">
    <skipped/>
  </testcase> <!-- testPostUser -->
  <testcase classname="api.test.UserTests" name="testGetUserByName" time="0.001">
    <skipped/>
  </testcase> <!-- testGetUserByName -->
  <testcase classname="api.test.UserTests" name="testUpdateUserByName" time="0.0">
    <skipped/>
  </testcase> <!-- testUpdateUserByName -->
  <testcase classname="api.test.UserTests" name="testDeleteUserByName" time="0.001">
    <skipped/>
  </testcase> <!-- testDeleteUserByName -->
</testsuite> <!-- PetTests -->
